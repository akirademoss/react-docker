/* eslint no-undef: 0 */ // --> OFF
//Basic imports
import React, {useState} from 'react';
import Button from '@material-ui/core/Button';
import CssBaseline from '@material-ui/core/CssBaseline';
import TextField from '@material-ui/core/TextField';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import Checkbox from '@material-ui/core/Checkbox';
import Link from '@material-ui/core/Link';
import Grid from '@material-ui/core/Grid';
import Box from '@material-ui/core/Box';
import Typography from '@material-ui/core/Typography';

//toolbarstuff
import AppBar from "@material-ui/core/AppBar";
import Toolbar from "@material-ui/core/Toolbar";
import InstaIcon from "@material-ui/icons/Instagram";
import FacebookIcon from "@material-ui/icons/Facebook";
//import CustomLogo from '/static/images/logox7-400.png';
import SvgIcon from '@material-ui/core/SvgIcon';
import { ThemeProvider } from "@material-ui/styles";
import BottomNavigation from '@material-ui/core/BottomNavigation';

//styles and color imports
import { makeStyles } from '@material-ui/core/styles';
import { fade } from '@material-ui/core/styles/colorManipulator';
import { createMuiTheme } from '@material-ui/core/styles';
import red from '@material-ui/core/colors/red';

//pages imports
import history from '../history';

//redux imports
import { useDispatch } from "react-redux";
import { login } from "../features/userSlice";

//import for actions
import { authenticate } from "../actions/auth";

// CSS styling 
const darkTheme = createMuiTheme({
  palette: {
    type: 'dark',
    primary: {
      light: red[700],
      main: '#ffffff',
    },
    secondary: {
      main: red[700],
    },
  },
  typography: {
    fontFamily: [
      'sans-serif',
      '"Segoe UI Symbol"',
    ].join(','),
  },
  button: {
    textTransform: 'none',
  },
});

const useStyles = makeStyles((theme) => ({
  background: {
    background: `url('${process.env.PUBLIC_URL}/static/images/cool-rotations-darkened2.png')`,
    backgroundRepeat: 'no-repeat',
    backgroundPosition: 'center',
    backgroundSize: 'cover',
    height: 1068,
    width: '100%',
    minHeight: '100vh',
    backgroundAttachment: 'fixed',
  },
  layout: {
    marginTop: darkTheme.spacing(0),
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
  }, 
  //Part of Top Nav Bar  
  navBar: {
    background: 'transparent', 
    boxShadow: 'none',
    minHeight: 5,
  },
  rightToolbar: {
    marginLeft: "auto",
    marginRight: -12,
  },
  homeButton: {
    marginRight: 0,
    marginLeft: -12,
    marginTop: 0,
    width: 400, 
    background: 'transparent',
    "&:hover": {
      background: 'transparent',
    },
  },
  createAccountButton: {
    margin: darkTheme.spacing(0, 0, 0),
    width: 170,
  }, 
//Form Elements
  form: {
    width: 450, // Fix IE 11 issue.
    height: 650,
    marginTop: darkTheme.spacing(3),
    display: 'flex',
    flexDirection: 'column',
    backgroundColor: fade(darkTheme.palette.common.black, 0.85),
    alignItems: 'center',
  },
  text: {
    width: 290,
  },
  signInButton: {
    margin: darkTheme.spacing(3, 0, 0),
    width: 290,
  },
  icon: {
    display: 'flex', 
    flexDirection: 'row', 
    alighnItems: 'center',
  },
  divider: {
    marginTop: darkTheme.spacing(0),
    display: 'flex',
    flexDirection: 'row',
    alignItems: 'center',
    width:  '100%',
    height: '100%',
  },
  border: {
    borderBottom: '2px solid gray',
    width: '100%',
    marginRight: 20,
    marginLeft: 20,
  },
  content: {
    paddingTop: darkTheme.spacing(0.5),
    paddingBottom: darkTheme.spacing(0.5),
    paddingRight: darkTheme.spacing(3),
    paddingLeft: darkTheme.spacing(3),
    fontWeight: 500,
    fontSize: 22,
    color: "lightgray",
  },  
  instaButton: {
    margin: darkTheme.spacing(0, 0, 0),
    width: 290,
    textTransform: 'none',
    flexShrink: 'auto',
  }, 
  fbButton: {
    margin: darkTheme.spacing(3, 0, 0),
    width: 290,
    textTransform: 'none',
    flexShrink: 'auto',
  },
//Bottom Nav Bar
  bottomNavBar: {
    boxShadow: 'none',
    background: 'transparent',
    bottom: 0,
    display: 'flex',
    flexDirection: 'row',
    alignItems: 'center',
    width: '100%',
    position: 'fixed',
    //backgroundColor: fade(darkTheme.palette.secondary.main, 0.85),
  },
}));



function NavBar(){
  const classes = useStyles();
  return(
    <AppBar position="static" className={classes.navBar}>
      <Toolbar>
        <Button className={classes.homeButton}
          onClick={() => history.push('/')}
        >
          <img src={process.env.PUBLIC_URL + '/static/images/logox7-400.png'}/>
        </Button>
        <section className={classes.rightToolbar}>
          <Button
            type="submit"
            variant="contained"
            color="secondary"
            className={classes.createAccountButton}
            onClick={() => history.push('/CreateAccount')}
          >
            Create Account
          </Button>
        </section>
      </Toolbar>
    </AppBar> 
  );
}

// Components 
function Copyright() {
  return (
    <Typography variant="body2" color="textSecondary" align="center">
      {'Copyright Â© '}
      <Link color="inherit" href="https://material-ui.com/">
        Too Legit To Submit, Inc
      </Link>{' '}
      {new Date().getFullYear()}
      {'.'}
    </Typography>
  );
}

function SignInForm(){
  const classes = useStyles();

  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");

  const dispatch = useDispatch();
  const handleSubmit = (e) => {
    e.preventDefault();
    dispatch(authenticate(username, password));
  };

  return(
    <div>
    <form className={classes.form} onSubmit={(e) => handleSubmit(e)}>
      <Box m={3}/>
      <Typography component="h1" variant="h4" align="center">
            Sign In
      </Typography>

      <Box m={1}/>

      <TextField
        color="primary"
        variant="outlined"
        margin="normal"
        required
        id="username"
        label="Username"
        name="username"
        type="username"
        value={username}
        autoComplete="username"
        autoFocus
        className={classes.text}
        onChange={(e) => setUsername(e.target.value)}
      />
      <TextField
        color="primary"
        variant="outlined"
        margin="normal"
        required
        id="password"
        label="Password"
        name="password"
        type="password"
        value={password}
        autoComplete="current-password"
        autoFocus
        className={classes.text}
        onChange={(e) => setPassword(e.target.value)}
      />
          
      <Box m={1}/>
      <Button
        type="submit"
        variant="contained"
        color="secondary"
        className={classes.signInButton}
        //onClick={() => history.push('/Private')}
      >
        Sign In
      </Button>     
      <Grid container  direction="row" alignItems="center" justify="center">
        <Grid item xs={6} >
          <FormControlLabel
            control={<Checkbox value="lsRememberMe" color="primary" id="rememberMe"/>}
            label={<Typography component="h1" variant="caption" align="center">Remember me</Typography>}
            onClick={() => lsRememberMe()}
          />
        </Grid>
        <Grid item>
          <Link href="#" variant="caption" color="primary">
            Need help?
          </Link>
	      </Grid>
      </Grid>

      <div className={classes.divider}>
        <div className={classes.border} style={{marginLeft: 30}}/>
          <Typography component="h1" variant="body1" align="center" >{"OR"}</Typography>
        <div className={classes.border} style={{marginRight: 30}}/>
      </div>

      <Button
        type="submit"
        variant="contained"
        className={classes.instaButton}
      >
        <Grid container  direction="row" alignItems="center" justify="center">
          <Grid item xs={2}>
            <SvgIcon  className={classes.icon}>
              <InstaIcon/>
            </SvgIcon>
          </Grid>
          <Grid item2="true">
            {"Log in with Instagram"}
          </Grid>
        </Grid>
      </Button>
         
      <Button
        type="submit"
        variant="contained"
        className={classes.fbButton}
      >
        <Grid container  direction="row" alignItems="center" justify="center">
          <Grid item xs={2}>
            <SvgIcon className={classes.icon}>
              <FacebookIcon/>
            </SvgIcon>
          </Grid>
          <Grid item2="true">
            {"Log in with Facebook"}
          </Grid>
        </Grid>
      </Button>
          
      <Box m={4}/>
      <BottomNavigation position="fixed" className={classes.bottomNavBar}>
        <Copyright />
      </BottomNavigation>
    </form> 
    <Box m={4}/>

    </div>
  );
}

//helper code for RememberMe TODO:
function lsRememberMe() {
  const rmCheck = document.getElementById("rememberMe");
  const usernameInput = document.getElementById("username");


  if (rmCheck.checked && usernameInput.value !== "") {
    localStorage.username = usernameInput.value;
    localStorage.checkbox = rmCheck.value;
    console.log(localStorage.username);
    console.log(localStorage.checkbox);
  } else {
    localStorage.username = "";
    localStorage.checkbox = "";
  }


  if (localStorage.checkbox && localStorage.checkbox !== "") {
    rmCheck.setAttribute("checked", "checked");
    usernameInput.value = localStorage.username;
  } else {
    rmCheck.removeAttribute("checked");
    usernameInput.value = "";
  }
}

// Implementation 
export default function SignIn() {
  const classes = useStyles();
  return (
    <div className={classes.background}>
        <ThemeProvider theme={darkTheme}>
        <CssBaseline />
          <div>
            <NavBar />
          </div> 
          <div className={classes.layout}>
            <SignInForm />         
          </div>
        </ThemeProvider>
    </div>
  );
}

